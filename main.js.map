{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth/auth.actions.ts","webpack:///./src/app/auth/auth.effects.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.reducer.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/index.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/reducers.ts","webpack:///./src/app/auth/register/index.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/full.guard.ts","webpack:///./src/app/game/services/command.service.ts","webpack:///./src/app/game/services/index.ts","webpack:///./src/app/game/services/map.service.ts","webpack:///./src/app/game/services/socket.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/index.ts","webpack:///./src/app/reducers.ts","webpack:///./src/app/report-error/report-dialog/report-dialog.component.html","webpack:///./src/app/report-error/report-dialog/report-dialog.component.scss","webpack:///./src/app/report-error/report-dialog/report-dialog.component.ts","webpack:///./src/app/report-error/report-error.component.html","webpack:///./src/app/report-error/report-error.component.scss","webpack:///./src/app/report-error/report-error.component.ts","webpack:///./src/app/rollbar.ts","webpack:///./src/app/services/game-data.service.ts","webpack:///./src/app/world/world.actions.ts","webpack:///./src/app/world/world.effects.ts","webpack:///./src/app/world/world.reducer.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/game/game.module\": [\n\t\t\"./src/app/game/game.module.ts\",\n\t\t\"app-game-game-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<router-outlet></router-outlet>\\r\\n<report-error></report-error>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works!';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport {\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatSlideToggleModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatCardModule,\r\n  MatExpansionModule,\r\n  MatListModule,\r\n} from '@angular/material';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { routing, routedComponents } from './app.routing';\r\nimport { FullGuard } from './full.guard';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { GameDataService } from './services/game-data.service';\r\nimport { SocketService } from './game/services/socket.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { reducers, metaReducers } from './reducers';\r\nimport { WorldEffects } from './world/world.effects';\r\nimport { RollbarErrorHandler, RollbarService } from './rollbar';\r\nimport { ReportErrorComponent } from './report-error/report-error.component';\r\nimport { ReportDialogComponent } from './report-error/report-dialog/report-dialog.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('jwt');\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    EffectsModule.forRoot([WorldEffects]),\r\n    environment.production ? [] : StoreDevtoolsModule.instrument(),\r\n    routing,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    NgbModule.forRoot(),\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        headerName: 'Authorization',\r\n        tokenGetter,\r\n        whitelistedDomains: ['localhost:9000', 'server.stratego.xyz']\r\n      }\r\n    }),\r\n    FontAwesomeModule,\r\n    AuthModule,\r\n    Angulartics2Module.forRoot([Angulartics2GoogleAnalytics]),\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    routedComponents,\r\n    ReportErrorComponent,\r\n    ReportDialogComponent,\r\n  ],\r\n  providers: [\r\n    SocketService,\r\n    AuthGuard,\r\n    FullGuard,\r\n    GameDataService,\r\n    RollbarService.provider(),\r\n    { provide: ErrorHandler, useClass: RollbarErrorHandler },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    ReportDialogComponent,\r\n  ]\r\n})\r\nexport class AppModule {\r\n  constructor(angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics) {\r\n    (window.screen as any).orientation.lock('landscape')\r\n      .then(() => {})\r\n      .catch(() => {});\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { FullGuard } from './full.guard';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: 'manage',\r\n    canActivate: [AuthGuard],\r\n    data: { role: 'admin' },\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'world/:name',\r\n    canActivate: [/* AuthGuard, SocketGuard, WorldGuard */ FullGuard],\r\n    loadChildren: 'app/game/game.module#GameModule'\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n\r\nexport const routedComponents = [HomeComponent];\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthModuleState } from './auth/reducers';\r\n\r\n// import { AuthActions, AuthState, getUserState } from './store/auth';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private store: Store<AuthModuleState>, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot) {\r\n    const b: Promise<boolean> = new Promise((resolve) => setTimeout(() => resolve(true), 5000));\r\n    // return this.store.select(getUserState)\r\n    //   .filter(({ inProgress }) => !inProgress)\r\n    //   .map((d) => ({ lol: 'wut' }))\r\n    //   .subscribe(d => console.log('hmm', d));\r\n    return b;\r\n\r\n  //   return this.store.select(getUserState)\r\n  //     .filter(({ inProgress }) => !inProgress)\r\n  //     .map(({ user, token }) => {\r\n  //       console.log('hrllo', user, token)\r\n  //       const canAccess = !!user && !!token;\r\n  //       if (canAccess && (!route.data.role || route.data.role === user.role)) {\r\n  //         return true;\r\n  //       }\r\n  //       this.router.navigate(['login']);\r\n  //       return false;\r\n  //     });\r\n  }\r\n}\r\n","import { User, Credentials } from 'strat-ego-common';\r\nimport { Action } from '@ngrx/store';\r\n\r\n\r\nexport enum AuthActionTypes {\r\n  Login = '[Auth] Login',\r\n  LoginSuccess = '[Auth] Login Success',\r\n  LoginFail = '[Auth] Login Fail',\r\n  LoadProfileSuccess = '[Auth] Load Profile Success',\r\n  LoadProfileFail = '[Auth] Load Profile Fail',\r\n  Register = '[Auth] Register',\r\n  RegisterSuccess = '[Auth] Register Success',\r\n  RegisterFail = '[Auth] Register Fail',\r\n  Logout = '[Auth] Logout'\r\n}\r\n\r\nexport class Login implements Action {\r\n  readonly type = AuthActionTypes.Login;\r\n\r\n  constructor(public payload: Credentials) {}\r\n}\r\n\r\nexport class LoginSuccess implements Action {\r\n  readonly type = AuthActionTypes.LoginSuccess;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class LoginFail implements Action {\r\n  readonly type = AuthActionTypes.LoginFail;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class LoadProfileSuccess implements Action {\r\n  readonly type = AuthActionTypes.LoadProfileSuccess;\r\n\r\n  constructor(public payload: User) {}\r\n}\r\n\r\nexport class LoadProfileFail implements Action {\r\n  readonly type = AuthActionTypes.LoadProfileFail;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class Register implements Action {\r\n  readonly type = AuthActionTypes.Register;\r\n\r\n  constructor(public payload: Credentials) {}\r\n}\r\n\r\nexport class RegisterSuccess implements Action {\r\n  readonly type = AuthActionTypes.RegisterSuccess;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class RegisterFail implements Action {\r\n  readonly type = AuthActionTypes.RegisterFail;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class Logout implements Action {\r\n  readonly type = AuthActionTypes.Logout;\r\n}\r\n\r\nexport type AuthActions =\r\n  Login |\r\n  LoginSuccess |\r\n  LoginFail |\r\n  LoadProfileSuccess |\r\n  LoadProfileFail |\r\n  Register |\r\n  RegisterSuccess |\r\n  RegisterFail |\r\n  Logout;\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Effect, Actions, ROOT_EFFECTS_INIT, ofType } from '@ngrx/effects';\r\nimport { Observable ,  of ,  defer } from 'rxjs';\r\nimport { map, switchMap, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport * as authActions from './auth.actions';\r\nimport { Action } from '@ngrx/store';\r\nimport { SocketService } from '../game/services';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  @Effect()\r\n  public login$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authActions.Login>(authActions.AuthActionTypes.Login),\r\n    map((action) => action.payload),\r\n    switchMap((credentials) =>\r\n      this.authService.login(credentials).pipe(\r\n        map((token) => new authActions.LoginSuccess(token)),\r\n        catchError((error) => of(new authActions.LoginFail(error)))\r\n      )\r\n    ),\r\n  );\r\n\r\n  @Effect()\r\n  public profile$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authActions.LoginSuccess | authActions.RegisterSuccess>(authActions.AuthActionTypes.LoginSuccess, authActions.AuthActionTypes.RegisterSuccess),\r\n    switchMap(() =>\r\n      this.authService.getUser().pipe(\r\n        map((user) => new authActions.LoadProfileSuccess(user)),\r\n        catchError((error) => of(new authActions.LoadProfileFail(error)))\r\n      )\r\n    ),\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  public loginError$: Observable<any> = this.actions$.pipe(\r\n    ofType(authActions.AuthActionTypes.LoadProfileFail),\r\n    map(() => this.authService.removeToken())\r\n  );\r\n\r\n  @Effect()\r\n  public register$: Observable<any> = this.actions$.pipe(\r\n    ofType<authActions.Register>(authActions.AuthActionTypes.Register),\r\n    map((action) => action.payload),\r\n    switchMap((credentials) =>\r\n      this.authService.register(credentials).pipe(\r\n        map((token) => new authActions.RegisterSuccess(token)),\r\n        catchError((error) => of(new authActions.RegisterFail(error)))\r\n      ),\r\n    ),\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  public logout$: Observable<any> = this.actions$.pipe(\r\n    ofType(authActions.AuthActionTypes.Logout),\r\n    tap(() => {\r\n      this.authService.removeToken();\r\n      this.socketService.disconnect();\r\n      this.router.navigate(['/']);\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  public checkToken$ = defer(() => of(this.authService.getToken()));\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private socketService: SocketService,\r\n    private router: Router,\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router/';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { AuthEffects } from './auth.effects';\r\nimport { reducers } from './reducers';\r\nimport { AuthService } from './auth.service';\r\nimport { LoginComponent } from './login/index';\r\nimport { RegisterComponent } from './register/index';\r\n\r\nconst pages = [\r\n  LoginComponent,\r\n  RegisterComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: pages,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'register', component: RegisterComponent },\r\n    ]),\r\n    StoreModule.forFeature('auth', reducers),\r\n    EffectsModule.forFeature([AuthEffects])\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { User } from 'strat-ego-common';\r\nimport { AuthActions, AuthActionTypes } from './auth.actions';\r\n\r\nexport interface AuthState {\r\n  inProgress: boolean;\r\n  user: User;\r\n  token: string;\r\n  error?: any;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n  inProgress: false,\r\n  user: null,\r\n  token: null,\r\n  error: null,\r\n};\r\n\r\nexport function reducer(\r\n  state = initialState,\r\n  action: AuthActions\r\n): AuthState {\r\n  switch (action.type) {\r\n    case AuthActionTypes.Login:\r\n    case AuthActionTypes.Register:\r\n      return { ...state, inProgress: true, error: null };\r\n\r\n    case AuthActionTypes.LoginSuccess:\r\n    case AuthActionTypes.RegisterSuccess:\r\n      return { ...state, inProgress: false, token: action.payload };\r\n\r\n    case AuthActionTypes.LoadProfileSuccess:\r\n      return { ...state, inProgress: false, user: action.payload };\r\n\r\n    case AuthActionTypes.LoginFail:\r\n    case AuthActionTypes.RegisterFail:\r\n      return { ...state, inProgress: false, error: action.payload };\r\n\r\n    case AuthActionTypes.Logout:\r\n      return initialState;\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const getUser = (state: AuthState) => state.user;\r\nexport const getProgress = (state: AuthState) => state.inProgress;\r\nexport const getError = (state: AuthState) => state.error;\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable ,  BehaviorSubject } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from 'strat-ego-common';\r\n\r\nimport { LoginSuccess, Logout } from './auth.actions';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthModuleState } from './reducers';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nexport interface AuthResponse { token: string; }\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  jwtHelper: JwtHelperService;\r\n  tokenExpirationTimeout;\r\n  user = new BehaviorSubject(null);\r\n\r\n  constructor(private http: HttpClient, private router: Router, private store: Store<AuthModuleState>) {\r\n    this.jwtHelper = new JwtHelperService();\r\n  }\r\n\r\n  getToken() {\r\n    const token = localStorage.getItem('jwt');\r\n\r\n    if (!token || this.jwtHelper.isTokenExpired(token)) {\r\n      localStorage.removeItem('jwt');\r\n      return false;\r\n    }\r\n    // this.tokenData = this.jwtHelper.decodeToken(token);\r\n    this.store.dispatch(new LoginSuccess(token));\r\n  }\r\n\r\n  storeToken(token) {\r\n    const tokenExpires = new Date(this.jwtHelper.getTokenExpirationDate(token)).getTime();\r\n    this.tokenExpirationTimeout = setTimeout(this.tokenExpiration, tokenExpires - Date.now());\r\n    localStorage.setItem('jwt', token);\r\n    return token;\r\n  }\r\n\r\n  removeToken() {\r\n    clearTimeout(this.tokenExpirationTimeout);\r\n    localStorage.removeItem('jwt');\r\n  }\r\n\r\n  login(data) {\r\n    return this.http.post<AuthResponse>(`${environment.server.auth}local`, data).pipe(\r\n      map((response) => response.token),\r\n      tap((token) => this.storeToken(token))\r\n    );\r\n  }\r\n\r\n  register(data) {\r\n    return this.http.post<AuthResponse>(`${environment.server.api}users`, data).pipe(\r\n      map((response) => response.token),\r\n      tap((token) => this.storeToken(token))\r\n    );\r\n  }\r\n\r\n\r\n  tokenExpiration() {\r\n    this.store.dispatch(new Logout());\r\n  }\r\n\r\n  getUser() {\r\n    return this.http.get<User>(`${environment.server.api}users/me`);\r\n      // .cache();\r\n\r\n      // user$.subscribe(\r\n      //   u => this.user.next(u),\r\n      //   err => {\r\n      //     this.logout();\r\n      //     console.error('get user error', err)\r\n      //   }\r\n      // );\r\n\r\n\r\n      // return user$;\r\n  }\r\n}\r\n\r\n","export * from './login.component';\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div>\\r\\n    <h1>Login Form</h1>\\r\\n    <form (ngSubmit)=\\\"onSubmit(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginForm.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginForm.password\\\" required>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!loginForm.form.valid\\\">Submit</button>\\r\\n      <span class=\\\"text-danger\\\" *ngIf=\\\"loginForm.errors\\\">{{loginForm.errors.errorMessage}}</span>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Login } from '../auth.actions';\r\nimport { AuthModuleState, getAuthState } from '../reducers';\r\nimport { AuthState } from '../auth.reducer';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  @ViewChild('loginForm') public form: NgForm;\r\n  public userSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private store: Store<AuthModuleState>) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.userSubscription = this.store.select(getAuthState).subscribe((auth: AuthState) => {\r\n      if (auth.user) {\r\n         this.router.navigate(['/']);\r\n         return;\r\n      }\r\n      if (auth.error) {\r\n        if (auth.error.status === 401) {\r\n          const errBody = auth.error.json();\r\n          const errorMessage = errBody.message || 'Unauthorized';\r\n          this.form.form.setErrors({ errorMessage: errorMessage });\r\n          return;\r\n        }\r\n        this.form.form.setErrors({ errorMessage: 'Unforseen server error.'});\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.userSubscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.store.dispatch(new Login(form.value));\r\n  }\r\n\r\n}\r\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport * as auth from './auth.reducer';\r\n\r\nexport interface State {\r\n  auth: auth.AuthState;\r\n}\r\n\r\nexport interface AuthModuleState {\r\n  auth: State;\r\n}\r\n\r\nexport const reducers = {\r\n  auth: auth.reducer,\r\n};\r\n\r\nexport const getState = createFeatureSelector<State>('auth');\r\nexport const getAuthState = createSelector(\r\n  getState,\r\n  (state: State) => state.auth\r\n);\r\nexport const getUser = createSelector(\r\n  getAuthState,\r\n  auth.getUser,\r\n);\r\n","export * from './register.component';\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div>\\r\\n    <h1>Register Form</h1>\\r\\n    <form (ngSubmit)=\\\"onSubmit(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\">Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"loginForm.name\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginForm.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginForm.password\\\" required>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!loginForm.form.valid\\\">Submit</button>\\r\\n      <span class=\\\"text-danger\\\" *ngIf=\\\"loginForm.errors\\\">{{loginForm.errors.errorMessage}}</span>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthModuleState, getAuthState } from '../reducers';\r\nimport { AuthState } from '../auth.reducer';\r\nimport { Register } from '../auth.actions';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  @ViewChild('loginForm') public form: NgForm;\r\n  public userSubscription: Subscription;\r\n\r\n  constructor(private store: Store<AuthModuleState>, private router: Router) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.userSubscription = this.store.select(getAuthState).subscribe((auth: AuthState) => {\r\n      if (auth.user) {\r\n        this.router.navigate(['/']);\r\n        return;\r\n      }\r\n      if (auth.error) {\r\n        if (auth.error.status === 422) {\r\n          const errBody = auth.error.json();\r\n          const errorMessage = errBody.message || 'Could not register user';\r\n          this.form.form.setErrors({ errorMessage });\r\n          return;\r\n        }\r\n        this.form.form.setErrors({ errorMessage: 'Unforseen server error.'});\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.userSubscription.unsubscribe();\r\n  }\r\n\r\n  public onSubmit(form) {\r\n    this.store.dispatch(new Register(form.value));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { of } from 'rxjs';\r\nimport { filter, switchMap, map } from 'rxjs/operators';\r\n\r\nimport { SocketService } from './game/services';\r\nimport { getAuthState } from './auth/reducers';\r\nimport { SelectWorld } from './world/world.actions';\r\nimport { State, getWorlds } from './reducers';\r\n\r\n@Injectable()\r\nexport class FullGuard implements CanActivate {\r\n  constructor(private store: Store<State>, private router: Router, private socket: SocketService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot) {\r\n    const target = route.params['name'].toLowerCase();\r\n\r\n    return this.store.select(getAuthState).pipe(\r\n      filter(({ inProgress }) => !inProgress),\r\n      switchMap(({ user, token }) => {\r\n        const canAccess = !!user && !!token;\r\n        if (!canAccess || route.data.role && route.data.role !== user.role) {\r\n          this.router.navigate(['login']);\r\n          return of(false);\r\n        }\r\n        // this.store.dispatch({ type: PlayerActions.SET_PROGRESS })\r\n        return this.worldGuard(target, token);\r\n      })\r\n    );\r\n  }\r\n\r\n  public worldGuard(target, token) {\r\n    return this.store.select(getWorlds).pipe(\r\n\r\n      // .combineLatest(this.store.select(getPlayerState))\r\n      // .filter(([world, player]) => !player.inProgress)\r\n      // .map(([world, player]) => {\r\n      map((worlds) => {\r\n        const world = worlds.find((item) => item.world.name.toLowerCase() === target);\r\n        if (!world) {\r\n          this.router.navigate(['/']);\r\n          return false;\r\n        }\r\n        this.store.dispatch(new SelectWorld(world.world.name));\r\n        this.socket.connect(token);\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CommandService {\r\n  public targeting = new BehaviorSubject(null);\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export { SocketService } from './socket.service';\r\nexport { MapService } from './map.service';\r\nexport { CommandService } from './command.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { SocketService } from './socket.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport * as seedrandom from 'seedrandom';\r\nimport { Coords } from 'strat-ego-common';\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport class Hex {\r\n  constructor(public x: number, public y: number, public z: number) {}\r\n\r\n  round() {\r\n    let xi = Math.round(this.x);\r\n    let yi = Math.round(this.y);\r\n    let zi = Math.round(this.z);\r\n    const xDiff = Math.abs(xi - this.x);\r\n    const yDiff = Math.abs(yi - this.y);\r\n    const zDiff = Math.abs(zi - this.z);\r\n    if (xDiff > yDiff && xDiff > zDiff) {\r\n      xi = -yi - zi;\r\n    } else if (yDiff > zDiff) {\r\n      yi = -xi - zi;\r\n    } else {\r\n      zi = -xi - yi;\r\n    }\r\n    return new Hex(xi, yi, zi);\r\n  }\r\n  distance(target: Hex) {\r\n      return (Math.abs(this.x - target.x) + Math.abs(this.y - target.y) + Math.abs(this.z - target.z)) / 2;\r\n  }\r\n  toString() {\r\n    return `${this.x},${this.y},${this.z}`;\r\n  }\r\n}\r\nexport class Layout {\r\n  public orientation = {\r\n    f0: Math.sqrt(3.0),\r\n    f1: Math.sqrt(3.0) / 2,\r\n    f2: 0,\r\n    f3: 1.5,\r\n    b0: Math.sqrt(3.0) / 3,\r\n    b1: -1 / 3,\r\n    b2: 0,\r\n    b3: 2 / 3,\r\n    startAngle: 0.5\r\n  };\r\n\r\n  constructor(\r\n    public origin?: Point,\r\n    public size?: Point,\r\n    public centerCoord?: number,\r\n  ) {}\r\n\r\n  coordToHex(coord: Coords) {\r\n    const offsetCoord = [\r\n      coord[0] - this.centerCoord,\r\n      coord[1] - this.centerCoord,\r\n    ];\r\n    const x = offsetCoord[0] - (offsetCoord[1] + (offsetCoord[1] & 1)) / 2;\r\n    const y = offsetCoord[1];\r\n    const z = -x - y;\r\n    return new Hex(x, y, z);\r\n  }\r\n\r\n  coordToPixel(coord: Coords) {\r\n    const hex = this.coordToHex(coord);\r\n    return this.hexToPixel(hex);\r\n  }\r\n\r\n  hexToCoord(hex: Hex): Coords {\r\n    return [hex.x + (hex.y + (hex.y & 1)) / 2 + this.centerCoord, hex.y + this.centerCoord];\r\n  }\r\n\r\n  hexToPixel(hex: Hex): Point {\r\n    const x = (this.orientation.f0 * hex.x + this.orientation.f1 * hex.y) * this.size.x;\r\n    const y = (this.orientation.f2 * hex.x + this.orientation.f3 * hex.y) * this.size.y;\r\n    return {\r\n      x: x + this.origin.x,\r\n      y: y + this.origin.y\r\n    };\r\n  }\r\n\r\n  pixelToHex(point: Point) {\r\n    const pt: Point = {\r\n      x: (point.x - this.origin.x) / this.size.x,\r\n      y: (point.y - this.origin.y) / this.size.y\r\n    };\r\n    const x = this.orientation.b0 * pt.x + this.orientation.b1 * pt.y;\r\n    const y = this.orientation.b2 * pt.x + this.orientation.b3 * pt.y;\r\n    return new Hex(x, y, -x - y);\r\n  }\r\n\r\n  pixelToCoord(point: Point) {\r\n    const hex = this.pixelToHex(point);\r\n    return this.hexToCoord(hex.round());\r\n  }\r\n\r\n  hexCornerOffset(corner: number): Point {\r\n    const angle = 2.0 * Math.PI * (this.orientation.startAngle - corner) / 6;\r\n    return {\r\n      x: this.size.x * Math.cos(angle),\r\n      y: this.size.y * Math.sin(angle)\r\n    };\r\n  }\r\n\r\n  polygonCorners(target: Hex | Point, mapOffset: Point = { x: 0, y: 0 }) {\r\n    const corners: Point[] = [];\r\n    const center = target instanceof Hex ? this.hexToPixel(target) : target;\r\n    for (let i = 0; i < 6; i++) {\r\n        const offset = this.hexCornerOffset(i);\r\n        offset.x -= mapOffset.x;\r\n        offset.y -= mapOffset.y;\r\n        corners.push({\r\n          x: center.x + offset.x,\r\n          y: center.y + offset.y\r\n        });\r\n    }\r\n    return corners;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class MapService {\r\n  public imagesLoaded = new BehaviorSubject(false);\r\n  // TODO: use dynamic marker coloring, add markers for allies and naps\r\n  public mapTiles = {\r\n    image: null,\r\n    tiles: [\r\n      [0, 0], [120, 0], [240, 0], [360, 0], [480, 0], [600, 0],\r\n        [0, 140], [120, 140], [240, 140], /*[360, 140], [480, 140], [600, 140],*/\r\n      // [0, 280], [120, 280], [240, 280], [360, 280], [480, 280], [600, 280],\r\n      // [0, 420], [120, 420], [240, 420], [360, 420], [480, 420], [600, 420],\r\n      // [0, 560], [120, 560], [240, 560], [360, 560], [480, 560], [600, 560],\r\n      // [0, 700], [120, 700], [240, 700], [360, 700], [480, 700], [600, 700],\r\n      // [0, 840], [120, 840], [240, 840], [360, 840], [480, 840], [600, 840],\r\n      // [0, 980], [120, 980], [240, 980], [360, 980], [480, 980], [600, 980],\r\n      // [0, 1120], [120, 1120], [240, 1120], [360, 1120], [480, 1120], [600, 1120],\r\n      // [0, 1260], [120, 1260], [240, 1260], [360, 1260], [480, 1260], [600, 1260],\r\n    ],\r\n    object: [360, 140],\r\n    objectType: {\r\n      abandoned: [480, 140],\r\n      ownedActive: [600, 140],\r\n      owned: [0, 280],\r\n      member: [120, 280],\r\n      war: [240, 280],\r\n    },\r\n    size: [120, 140]\r\n  };\r\n  private mapImgeLoc = './assets/images/tiles_small.png';\r\n\r\n  constructor(private socket: SocketService) {\r\n    this.imgPreload(this.mapImgeLoc);\r\n    // Test version with all available map data\r\n    // this.socket.events.get('map').subscribe(event => {\r\n    //   this.lastUpdate = Date.now();\r\n    //   Object.assign(this.mapData, event);\r\n    //   if (this.queuedPromise.length && this.imagesLoaded) {\r\n    //     this.formatMapData(this.queuedPromise.shift());\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  public rng(seed) {\r\n    // TODO: use actual active world here\r\n    return seedrandom.xor4096(`megapolis.${seed}`).quick();\r\n  }\r\n\r\n  private imgPreload(imageURL) {\r\n    this.mapTiles.image = new Image();\r\n    this.mapTiles.image.src = imageURL;\r\n    this.mapTiles.image.onload = () => this.imagesLoaded.next(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable ,  BehaviorSubject ,  Subject } from 'rxjs';\r\nimport { combineLatest, filter } from 'rxjs/operators';\r\n\r\n// import 'rxjs/add/operator/cache';\r\nimport { Store } from '@ngrx/store';\r\nimport * as io from 'socket.io-client';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { GameModuleState } from '../reducers';\r\n\r\nexport type SocketEvent<T = any> = [string, (payload: T) => void];\r\n\r\n@Injectable()\r\nexport class SocketService {\r\n  name = 'tmp';\r\n  host = 'watever';\r\n// TODO: using subjects to delay registering after socket is initialized. This is required due to socket load on app startup\r\n// Consider separating game module and lazy loading it with sockets. That could potentially simplify registering logic.\r\n  public eventsToRegister$: BehaviorSubject<SocketEvent[]> = new BehaviorSubject([]);\r\n  private socket: SocketIOClient.Socket;\r\n  private registeredEvents = [];\r\n  private readyToRegister$: Subject<boolean> = new Subject();\r\n  private registerEventsSubscription = this.eventsToRegister$.pipe(\r\n    combineLatest(this.readyToRegister$),\r\n    filter(([events, ready]) => ready && !!events.length)\r\n  ).subscribe(([events]) => {\r\n    events.forEach(([event, callback]) => {\r\n      if (this.registeredEvents.includes(event)) { return; }\r\n\r\n      this.socket.on(event, callback);\r\n      this.registeredEvents.push(event);\r\n    });\r\n  });\r\n\r\n  public events = new Map();\r\n\r\n  constructor(private store: Store<GameModuleState>) {}\r\n\r\n  public registerEvents(events: SocketEvent[]) {\r\n    // Add to already existing events\r\n    this.eventsToRegister$.next([...this.eventsToRegister$.value, ...events]);\r\n  }\r\n\r\n  public connect(token): Observable<any> {\r\n    const world = 'megapolis'; // replace with target world data\r\n    this.socket = io.connect(environment.server.base, {\r\n        path: '/socket.io-client',\r\n        query: `token=${token}&world=${world}`,\r\n    });\r\n    this.readyToRegister$.next(true);\r\n\r\n    // TODO: rework returned value into something valid when working with server side socket authentication\r\n    return Observable.create(observer => {\r\n      this.socket.on('connect', data => observer.next(this.socket));\r\n    });\r\n  }\r\n\r\n  public disconnect() {\r\n    this.socket.close();\r\n    this.registeredEvents = [];\r\n    this.readyToRegister$.next(false);\r\n  }\r\n\r\n  public sendEvent(event: string, data?: any) {\r\n    console.log(`[Socket emit: ${event}]`, data);\r\n    this.socket.emit(event, data);\r\n  }\r\n}\r\n","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-md navbar-light bg-faded\\\" ngbDropdown>\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Strat-ego</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"navbarCollapse\\\" ngbDropdownToggle>\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse justify-content-lg-between\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\r\\n      <ul class=\\\"nav navbar-nav align-items-center\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\" *ngIf=\\\"user\\\">\\r\\n        <span>Welcome <strong>{{ user.name }}</strong></span>\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n      </div>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\" *ngIf=\\\"!user\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n        <span>or</span>\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">register</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<div class=\\\"container py-5 mb-5\\\">\\r\\n  <div class=\\\"worlds\\\">\\r\\n    <h1>Available worlds</h1>\\r\\n    <div class=\\\"row mt-5\\\">\\r\\n      <div class=\\\"col-4\\\" *ngFor=\\\"let world of worlds$ | async\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-header>\\r\\n            <mat-card-title><h3 class=\\\"text-uppercase font-weight-bold\\\">{{world.world.name}}</h3></mat-card-title>\\r\\n            <mat-card-subtitle>Started on {{world.world.createdAt | date:'short'}}</mat-card-subtitle>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content class=\\\"mx-2\\\">\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n              <div>World speed</div>\\r\\n              <div>{{world.world.speed}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n              <div>Current ring</div>\\r\\n              <div>{{world.world.currentRing}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n              <div>Barbarian percentage</div>\\r\\n              <div>{{world.world.barbPercent | percent}}</div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions class=\\\"pb-3 mx-2 d-flex\\\">\\r\\n            <button *ngIf=\\\"user\\\" mat-raised-button color=\\\"primary\\\" class=\\\"w-100\\\" [routerLink]=\\\"['/world', world.world.name]\\\">Play</button>\\r\\n            <button *ngIf=\\\"!user\\\" mat-button color=\\\"info\\\" class=\\\"w-50\\\" [routerLink]=\\\"['/login']\\\">Login</button>\\r\\n            <button *ngIf=\\\"!user\\\" mat-button color=\\\"info\\\" class=\\\"w-50\\\" [routerLink]=\\\"['/register']\\\">Register</button>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"worldError$ | async as error\\\" class=\\\"alert alert-danger\\\">{{ error }}</div>\\r\\n  </div>\\r\\n  <div class=\\\"introduction mt-5\\\">\\r\\n    <h2>About</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <p>Welcome to the alpha play test of <b>Stratego </b><i class=\\\"text-muted\\\">(working title)</i>! A free real time MMO strategy game about growing your empire and conquering others.</p>\\r\\n        <p>You start out with a small village and must navigate the dangerous political landscape of an unknown world to expand and grow into an empire. With passage of time you'll make trusty allies and find dangerous enemies. Will you band together with your new friends to stand your ground or will you try to survive on your own?</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 mt-4\\\">\\r\\n        <ngb-alert [dismissible]=\\\"false\\\" type=\\\"success\\\" class=\\\"text-center\\\">\\r\\n          <i>Looking for a designer to help shape the games visual identity, if you're interested please contact me at <a href=\\\"mailto:hello@klemensas.net?Subject=Designer\\\">hello@klemensas.net</a></i>\\r\\n        </ngb-alert>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"development pt-5\\\">\\r\\n    <h2>Roadmap</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <p>Generally each stage consists of base feature implementation, play test and changes according to feedback. After a full cycle work starts on another stages features. Once they are ready the world is completely reset to a clean state and the play testing for the next stage starts. While work goes on between stages the world is still kept in tact and players can continue playing.</p>\\r\\n        <p>The current alpha stage will be the most unstable one. This stage only consists of various base features and will be go through a lot of changes including game theme, design, naming revamp. Some features are already planned but various details are still undecided so you can contribute and impact growth of the game. You can contribute your ideas for possible features or just drop in to say hello, everything is appreciated.</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 roadmap mt-3\\\">\\r\\n        <mat-expansion-panel expanded class=\\\"roadmap-current\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>Alpha</mat-panel-title>\\r\\n            <mat-panel-description>in progress</mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div>\\r\\n            <mat-expansion-panel class=\\\"roadmap-complete\\\">\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>Alpha features</mat-panel-title>\\r\\n                <mat-panel-description>complete</mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <mat-list>\\r\\n                <mat-list-item>Basic interface</mat-list-item>\\r\\n                <mat-list-item>Town management</mat-list-item>\\r\\n                <mat-list-item>Unit recruitment</mat-list-item>\\r\\n                <mat-list-item>Dynamic map</mat-list-item>\\r\\n                <mat-list-item>Supporting and attacking</mat-list-item>\\r\\n                <mat-list-item>Abandoned town creation and growth</mat-list-item>\\r\\n                <mat-list-item>Unit commands</mat-list-item>\\r\\n                <mat-list-item>Combat reports</mat-list-item>\\r\\n                <mat-list-item>Alliances and management</mat-list-item>\\r\\n                <mat-list-item>Alliance chat</mat-list-item>\\r\\n                <mat-list-item>Alliance diplomacy</mat-list-item>\\r\\n                <mat-list-item>Rankings</mat-list-item>\\r\\n              </mat-list>\\r\\n                </mat-expansion-panel>\\r\\n            <mat-expansion-panel expanded class=\\\"roadmap-current\\\">\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>Alpha play test</mat-panel-title>\\r\\n                <mat-panel-description>in progress</mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <div>\\r\\n                <p>Currently the play test is ongoing. It's planned to go on for at least a few months before continuing.</p>\\r\\n              </div>\\r\\n            </mat-expansion-panel>\\r\\n            <mat-expansion-panel class=\\\"roadmap-upcoming\\\">\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>Alpha feedback</mat-panel-title>\\r\\n                <mat-panel-description>upcoming</mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <div>\\r\\n                <p><b>No feedback yet</b></p>\\r\\n                <p>Here will be listed various improvements made from player feedback</p>\\r\\n              </div>\\r\\n            </mat-expansion-panel>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n        <mat-expansion-panel class=\\\"roadmap-future\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>Beta</mat-panel-title>\\r\\n            <mat-panel-description>planned</mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div>\\r\\n            <mat-expansion-panel expanded class=\\\"roadmap-future\\\">\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>Beta features</mat-panel-title>\\r\\n                <mat-panel-description>planned</mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <mat-list>\\r\\n                <mat-list-item><b>Apply a game theme</b></mat-list-item>\\r\\n                <mat-list-item><b>Create and implement a custom design</b></mat-list-item>\\r\\n                <mat-list-item>Reconsider unit resource</mat-list-item>\\r\\n                <mat-list-item>More caching</mat-list-item>\\r\\n                <mat-list-item>Minimap</mat-list-item>\\r\\n                <mat-list-item>Trading</mat-list-item>\\r\\n                <mat-list-item>Map districts</mat-list-item>\\r\\n                <mat-list-item>More statistics, rankings</mat-list-item>\\r\\n                <mat-list-item>Game events</mat-list-item>\\r\\n                <mat-list-item>Introduce alternative expansion method</mat-list-item>\\r\\n                <mat-list-item>Game administration, moderation</mat-list-item>\\r\\n              </mat-list>\\r\\n                </mat-expansion-panel>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n        <mat-expansion-panel class=\\\"roadmap-future\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>Release candidate</mat-panel-title>\\r\\n            <mat-panel-description>planned</mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div>Not detailed yet</div>\\r\\n        </mat-expansion-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".roadmap > mat-expansion-panel > mat-expansion-panel-header {\\n  text-transform: uppercase; }\\n  .roadmap > mat-expansion-panel > mat-expansion-panel-header mat-panel-title {\\n    font-size: 1.3rem; }\\n  .roadmap mat-expansion-panel mat-expansion-panel {\\n  margin: 0 -24px; }\\n  .roadmap mat-panel-title {\\n  font-weight: 700;\\n  font-size: 1.1rem; }\\n  .roadmap mat-panel-description {\\n  flex-grow: 0;\\n  text-transform: uppercase;\\n  font-size: 0.7rem;\\n  font-weight: 700; }\\n  .roadmap /deep/ .mat-content {\\n  align-items: center; }\\n  .roadmap .roadmap-complete {\\n  color: white;\\n  background-color: var(--green); }\\n  .roadmap .roadmap-complete mat-panel-title,\\n  .roadmap .roadmap-complete mat-list-item {\\n    color: white; }\\n  .roadmap .roadmap-upcoming {\\n  background-color: var(--yellow); }\\n  .roadmap .roadmap-future {\\n  color: white;\\n  background-color: var(--orange); }\\n  .roadmap .roadmap-future mat-panel-title,\\n  .roadmap .roadmap-future mat-list-item {\\n    color: white; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { Logout } from '../auth/auth.actions';\r\nimport { getUser, AuthModuleState } from '../auth/reducers';\r\nimport { getWorlds, getWorldError } from '../reducers';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  public worlds;\r\n  public user;\r\n  public userSubscription$: Subscription;\r\n  public worlds$ = this.store.select(getWorlds);\r\n  public worldError$ = this.store.select(getWorldError).pipe(\r\n    filter((error) => !!error),\r\n    map((error) => 'Could not connect to the server.')\r\n  );\r\n  public userSubScription: Subscription;\r\n  public isCollapsed = true;\r\n\r\n  constructor(private authService: AuthService, private store: Store<AuthModuleState>) {}\r\n\r\n  ngOnInit() {\r\n    this.userSubscription$ = this.store.select(getUser).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSubscription$.unsubscribe();\r\n  }\r\n\r\n  userOnWorld(world) {\r\n      return this.user.UserWorlds.find(w => w.id === world.id);\r\n  }\r\n\r\n  logout() {\r\n    this.store.dispatch(new Logout());\r\n  }\r\n\r\n}\r\n","export * from './home.component';\r\n","export * from './app.component';\r\nexport * from './app.module';\r\n","import { environment } from '../environments/environment';\r\nimport { MetaReducer, ActionReducer, ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { storeFreeze } from 'ngrx-store-freeze';\r\nimport * as fromWorld from './world/world.reducer';\r\nimport { AuthActionTypes } from './auth/auth.actions';\r\n\r\nexport interface State {\r\n  world: fromWorld.WorldState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  world: fromWorld.reducer\r\n};\r\n\r\nexport function logger(reducer: ActionReducer<State>): ActionReducer<State> {\r\n  return function(state: State, action: any): State {\r\n    console.debug('state', state);\r\n    console.debug('action', action);\r\n\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\nexport function reset(reducer) {\r\n  return function(state, action) {\r\n    if (action.type === AuthActionTypes.Logout) { state = { world: state.world }; }\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n// TODO: Observable.timer causes freeze to throw\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [logger, reset, /* storeFreeze */] : [];\r\n\r\nexport const getWorldState = createFeatureSelector<fromWorld.WorldState>('world');\r\nexport const getWorlds = createSelector(\r\n  getWorldState,\r\n  fromWorld.getWorlds\r\n);\r\nexport const getWorldError = createSelector(\r\n  getWorldState,\r\n  fromWorld.getWorldError\r\n);\r\nexport const getActiveWorld = createSelector(\r\n  getWorldState,\r\n  fromWorld.getActiveWorld\r\n);\r\n","module.exports = \"<h1 mat-dialog-title>Give feedback</h1>\\r\\n<mat-dialog-content>\\r\\n  <p>\\r\\n    Here you can give feedback or report bugs, please select the corresponding category.<br>\\r\\n    Your feedback is appreciated.\\r\\n  </p>\\r\\n  <div>\\r\\n    <mat-form-field>\\r\\n      <mat-select [(value)]=\\\"category\\\" placeholder=\\\"Category\\\">\\r\\n        <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\r\\n          {{category}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"mb-2\\\">\\r\\n      <mat-slide-toggle color=\\\"primary\\\" [(checked)]=\\\"canContact\\\">Contact me for further discussion via registered email</mat-slide-toggle>\\r\\n    </div>\\r\\n    <mat-form-field [(ngModel)]=\\\"description\\\" ngDefaultControl style=\\\"width: 100%;\\\">\\r\\n      <textarea [ngModel]=\\\"description\\\" matInput placeholder=\\\"Description\\\" matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!description || !category\\\" (click)=\\\"sendReport()\\\">Send</button>\\r\\n  <button mat-raised-button color=\\\"warn\\\" mat-dialog-close class=\\\"float-right\\\">Cancel</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { RollbarService } from '../../rollbar';\r\nimport { MatSnackBar, MatDialogRef } from '../../../../node_modules/@angular/material';\r\n\r\n@Component({\r\n  selector: 'report-dialog',\r\n  templateUrl: './report-dialog.component.html',\r\n  styleUrls: ['./report-dialog.component.scss']\r\n})\r\nexport class ReportDialogComponent {\r\n  public categories = [\r\n    'bug',\r\n    'feedback',\r\n    'suggestion',\r\n    'other',\r\n  ];\r\n  public category = '';\r\n  public description = '';\r\n  public canContact = true;\r\n\r\n  constructor(private rollbarService: RollbarService, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ReportDialogComponent>) { }\r\n\r\n  sendReport() {\r\n    this.rollbarService.rollbar.info({\r\n      category: this.category,\r\n      description: this.description,\r\n      canContact: this.canContact,\r\n    }, () => this.reportSent());\r\n  }\r\n\r\n  reportSent() {\r\n    this.dialogRef.close();\r\n    this.snackBar.open('Report submitted successfully', null, { panelClass: ['snackbar-event', 'snackbar-success'], duration: 1800 });\r\n  }\r\n\r\n}\r\n","module.exports = \"<button mat-mini-fab mat-accent (click)=\\\"openDialog()\\\">\\r\\n  <fa-icon [icon]=\\\"['fas', 'bug']\\\"></fa-icon>\\r\\n</button>\\r\\n\"","module.exports = \":host {\\n  position: fixed;\\n  right: 20px;\\n  bottom: 90px;\\n  z-index: 1;\\n  border-radius: 50%; }\\n  :host button {\\n    width: 56px;\\n    height: 56px;\\n    outline: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faBug } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReportDialogComponent } from './report-dialog/report-dialog.component';\r\n\r\n@Component({\r\n  selector: 'report-error',\r\n  templateUrl: './report-error.component.html',\r\n  styleUrls: ['./report-error.component.scss']\r\n})\r\nexport class ReportErrorComponent implements OnInit {\r\n  reportDialog: MatDialogRef<ReportDialogComponent>;\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    library.add(faBug);\r\n  }\r\n\r\n  openDialog() {\r\n    this.reportDialog = this.dialog.open(ReportDialogComponent, { maxWidth: 500 });\r\n\r\n    this.reportDialog.afterClosed().subscribe(result => {\r\n      this.reportDialog = null;\r\n    });\r\n  }\r\n}\r\n","import * as Rollbar from 'rollbar';\r\nimport {\r\n  Injectable,\r\n  ErrorHandler,\r\n  Injector,\r\n} from '@angular/core';\r\n\r\nimport { environment } from '../environments/environment';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthModuleState, getUser } from './auth/reducers';\r\n\r\nconst rollbarConfig: Rollbar.Configuration = {\r\n  accessToken: environment.rollbarToken,\r\n  captureUncaught: true,\r\n  captureUnhandledRejections: true,\r\n  environment: environment.production ? 'production' : 'development',\r\n};\r\n\r\n@Injectable()\r\nexport class RollbarService {\r\n  private personSubscription = this.store.select(getUser).subscribe((user) => {\r\n    const person = user ? {\r\n      ...user,\r\n      username: user.name,\r\n    } : null;\r\n    this.rollbar.configure({\r\n      payload: {\r\n        person,\r\n      }\r\n    });\r\n  });\r\n\r\n  public static factory (store) {\r\n    if (!rollbarConfig.accessToken) {\r\n      throw new Error('Missing rollbar token');\r\n    }\r\n    return new RollbarService(new Rollbar(rollbarConfig), store);\r\n  }\r\n\r\n  public static provider() {\r\n    return {\r\n      provide: RollbarService,\r\n      deps: [Store],\r\n      useFactory: RollbarService.factory\r\n    };\r\n  }\r\n\r\n  constructor(public rollbar: Rollbar, private store: Store<AuthModuleState>) {}\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class RollbarErrorHandler implements ErrorHandler {\r\n  constructor(private injector: Injector) {}\r\n\r\n  handleError(err: any): void {\r\n    const rollbarService = this.injector.get(RollbarService);\r\n    rollbarService.rollbar.error(err.originalError || err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WorldData } from 'strat-ego-common';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class GameDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getActiveWorlds() {\r\n    return this.http.get<WorldData[]>(`${environment.server.api}world`);\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { WorldData } from 'strat-ego-common';\r\n\r\nexport enum WorldActionTypes {\r\n  Load = '[World] Load',\r\n  Loadsuccess = '[World] Load Success',\r\n  LoadFail = '[World] Load Fail',\r\n  SelectWorld = '[World] Select World'\r\n}\r\n\r\nexport class Load implements Action {\r\n  readonly type = WorldActionTypes.Load;\r\n}\r\n\r\nexport class Loadsuccess implements Action {\r\n  readonly type = WorldActionTypes.Loadsuccess;\r\n\r\n  constructor(public payload: WorldData[]) {}\r\n}\r\n\r\nexport class LoadFail implements Action {\r\n  readonly type = WorldActionTypes.LoadFail;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class SelectWorld implements Action {\r\n  readonly type = WorldActionTypes.SelectWorld;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport type WorldActions =\r\n  Load |\r\n  Loadsuccess |\r\n  LoadFail |\r\n  SelectWorld;\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Observable, of, defer } from 'rxjs';\r\nimport { map, switchMap, catchError } from 'rxjs/operators';\r\nimport { Store, Action } from '@ngrx/store';\r\n\r\nimport { Load, WorldActionTypes, Loadsuccess, LoadFail } from './world.actions';\r\nimport { GameDataService } from '../services/game-data.service';\r\nimport { State } from '../reducers';\r\n\r\n@Injectable()\r\nexport class WorldEffects {\r\n\r\n  @Effect()\r\n  public load$: Observable<Action> = this.actions$.pipe(\r\n    ofType<Load>(WorldActionTypes.Load),\r\n    switchMap(() =>\r\n      this.dataService.getActiveWorlds().pipe(\r\n        map((data) => new Loadsuccess(data)),\r\n        catchError((error) => of(new LoadFail(error)))\r\n      )\r\n    ),\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  public initLoad$: Observable<any> = defer(() => {\r\n    return this.store.dispatch(new Load());\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private dataService: GameDataService,\r\n    private router: Router,\r\n    private store: Store<State>,\r\n  ) {}\r\n}\r\n","import { WorldData } from 'strat-ego-common';\r\n\r\nimport { WorldActions, WorldActionTypes } from './world.actions';\r\n\r\nexport interface WorldState {\r\n  worlds: WorldData[];\r\n  activeWorld: string;\r\n  error: any;\r\n}\r\n\r\nexport const initialState = {\r\n  worlds: [],\r\n  activeWorld: null,\r\n  error: null,\r\n};\r\n\r\n\r\nexport function reducer(\r\n  state = initialState,\r\n  action: WorldActions\r\n): WorldState {\r\n  switch (action.type) {\r\n    case WorldActionTypes.Loadsuccess:\r\n      return { ...state, worlds: [...state.worlds, ...action.payload] };\r\n\r\n      case WorldActionTypes.SelectWorld:\r\n      return { ...state, activeWorld: action.payload };\r\n\r\n    case WorldActionTypes.LoadFail:\r\n      return { ...state, error: action.payload };\r\n\r\n    case WorldActionTypes.Load:\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const getWorlds = (state: WorldState) => state.worlds;\r\nexport const getWorldError = (state: WorldState) => state.error;\r\nexport const getActiveWorld = (state: WorldState) => state.worlds.find(({ world }) =>\r\n  world.name === state.activeWorld);\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  rollbarToken: 'a11b482162fc4f729661b4549b943a0f',\r\n  rankingUpdateFrequency: 600000,\r\n  server: {\r\n    base: 'http://localhost:9000',\r\n    api: 'http://localhost:9000/api/',\r\n    auth: 'http://localhost:9000/auth/'\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}